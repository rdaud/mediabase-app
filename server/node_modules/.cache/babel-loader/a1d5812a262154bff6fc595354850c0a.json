{"ast":null,"code":"import _objectSpread from\"/Users/rodrigodaudskeff/Desktop/Mediabase/mediabase-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import jwt from\"jsonwebtoken\";import{createReducer,createAction}from\"@reduxjs/toolkit\";export var isValidToken=function isValidToken(token){var decoded=jwt.decode(token);return new Date(decoded.exp*1000)>new Date()?decoded:null;};var initState={user:localStorage.getItem(\"USER-TOKEN\")?isValidToken(localStorage.getItem(\"USER-TOKEN\")):null,token:localStorage.getItem(\"USER-TOKEN\")?localStorage.getItem(\"USER-TOKEN\"):[],error:\"\",loading:false,isAuthenticated:false};// const signInRequest = createAction(\"SIGN_IN_REQUEST\")\n// const signUpRequest = createAction(\"SIGN_UP_REQUEST\")\n// const getUserRequest = createAction(\"GET_USER_REQUEST\")\n// const getAvatarRequest = createAction(\"GET_AVATAR_REQUEST\")\n// const signInFailure = createAction(\"SIGN_IN_FAILURE\")\n// const signInSuccess = createAction(\"SIGN_IN_SUCCESS\")\n// const signUpSuccess = createAction(\"SIGN_UP_SUCCESS\")\n// const signUpFailure = createAction(\"SIGN_UP_FAILURE\")\n// const signOutFailure = createAction(\"SIGN_OUT_FAILURE\")\n/**\n * Without createReducer\n *  */var authReducer=function authReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case\"SIGN_IN_REQUEST\":case\"SIGN_UP_REQUEST\":case\"SIGN_OUT_REQUEST\":return _objectSpread(_objectSpread({},state),{},{loading:true,isAuthenticated:false});case\"GET_USER_REQUEST\":return _objectSpread({},state);case\"GET_AVATAR_REQUEST\":return _objectSpread({},state);case\"GET_USER_SUCCESS\":return _objectSpread(_objectSpread({},state),{},{isAuthenticated:true,user:{name:action.payload.name,email:action.payload.email,password:action.payload.password}});case\"GET_AVATAR_SUCCESS\":return _objectSpread(_objectSpread({},state),{},{user:{avatar:action.payload}});case\"GET_AVATAR_FAILURE\":return _objectSpread(_objectSpread({},state),{},{error:action.payload});case\"GET_USER_FAILURE\":return _objectSpread(_objectSpread({},state),{},{isAuthenticated:false,error:action.payload});case\"SIGN_IN_FAILURE\":case\"SIGN_UP_FAILURE\":case\"SIGN_OUT_FAILURE\":return _objectSpread(_objectSpread({},state),{},{loading:false,error:action.payload,user:null,isAuthenticated:false});case\"SIGN_IN_REQUEST\":return{loading:true};case\"SIGN_UP_SUCCESS\":case\"SIGN_IN_SUCCESS\":return _objectSpread(_objectSpread({},state),{},{loading:false,isAuthenticated:true,user:action.payload.user,token:action.payload.token});case\"SIGN_OUT_SUCCESS\":return _objectSpread(_objectSpread({},state),{},{isAuthenticated:false,loading:false,user:null,token:\"\"});default:return state;}};export default authReducer;/**\n * Implementation of createReducer\n */ //  const authReducer = createReducer(initState, (builder) => {\n//   builder\n//     .addMatcher(isAnyOf(signInRequest,signUpRequest), (state,action) => {  \n//         state.loading = true;\n//         state.isAuthenticated = false;  \n//     })\n//     .addCase(\"SIGN_OUT_REQUEST\", (state,action) => { \n//         state.isAuthenticated = false;   \n//     })\n//     .addMatcher(isAnyOf(getUserRequest,getAvatarRequest), (state,action) => {\n//         return state\n//     })\n//     .addCase(\"GET_USER_SUCCESS\", (state,action) => {  \n//         state.isAuthenticated = true;\n//         state.user.name = action.payload.name;\n//         state.user.email = action.payload.email;\n//         state.user.password = action.payload.password;  \n//     })\n//     .addCase(\"GET_AVATAR_SUCCESS\", (state,action) => {\n//         state.user.avatar = action.payload;\n//     })\n//     .addCase(\"GET_AVATAR_FAILURE\", (state,action) => {\n//         state.error = action.payload\n//     })\n//     .addCase(\"GET_USER_FAILURE\", (state,action) => {\n//         state.isAuthenticated = false;\n//         state.error = action.payload \n//     })\n//     .addCase(\"GET_USER_FAILURE\", (state,action) => {\n//         state.isAuthenticated = false;\n//         state.error = action.payload \n//     })\n//     .addMatcher(isAnyOf(signInFailure,signUpFailure,signOutFailure), (state,action) => {\n//         state.loading = false;\n//         state.error = action.payload;\n//         state.user = null;\n//         state.isAuthenticated = false;\n//     })\n//     .addCase(\"SIGN_IN_REQUEST\", (state,action) => {\n//         state.loading = true\n//     })\n//     .addMatcher(isAnyOf(signInSuccess,signUpSuccess), (state,action) => {\n//         state.loading = false\n//         state.isAuthenticated = true\n//         state.user = action.payload.user\n//         state.token = action.payload.token\n//     })\n//     .addCase(\"SIGN_OUT_SUCCESS\", (state,action) => {\n//         state.isAuthenticated = false\n//         state.loading = false\n//         state.user = null\n//         state.token = \"\"\n//     })\n//     .addDefaultCase((state, action) => {\n//         return state\n//     }) \n// })","map":{"version":3,"sources":["/Users/rodrigodaudskeff/Desktop/Mediabase/mediabase-app/client/src/redux/reducers/authReducer.js"],"names":["jwt","createReducer","createAction","isValidToken","token","decoded","decode","Date","exp","initState","user","localStorage","getItem","error","loading","isAuthenticated","authReducer","state","action","type","name","payload","email","password","avatar"],"mappings":"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","sourcesContent":["import jwt from \"jsonwebtoken\";\nimport { createReducer, createAction } from \"@reduxjs/toolkit\";\n\nexport const isValidToken = (token) => {\n  let decoded = jwt.decode(token);\n  return new Date(decoded.exp * 1000) > new Date() ? decoded : null;\n};\n\nconst initState = {\n  user: localStorage.getItem(\"USER-TOKEN\")\n    ? isValidToken(localStorage.getItem(\"USER-TOKEN\"))\n    : null,\n  token: localStorage.getItem(\"USER-TOKEN\")\n    ? localStorage.getItem(\"USER-TOKEN\")\n    : [],\n  error: \"\",\n  loading: false,\n  isAuthenticated: false,\n};\n\n// const signInRequest = createAction(\"SIGN_IN_REQUEST\")\n// const signUpRequest = createAction(\"SIGN_UP_REQUEST\")\n// const getUserRequest = createAction(\"GET_USER_REQUEST\")\n// const getAvatarRequest = createAction(\"GET_AVATAR_REQUEST\")\n// const signInFailure = createAction(\"SIGN_IN_FAILURE\")\n// const signInSuccess = createAction(\"SIGN_IN_SUCCESS\")\n// const signUpSuccess = createAction(\"SIGN_UP_SUCCESS\")\n// const signUpFailure = createAction(\"SIGN_UP_FAILURE\")\n// const signOutFailure = createAction(\"SIGN_OUT_FAILURE\")\n\n\n\n/**\n * Without createReducer\n *  */ \n\nconst authReducer = function (state = initState, action) {\n\n  switch (action.type) {\n  \n    case \"SIGN_IN_REQUEST\":\n    case \"SIGN_UP_REQUEST\":\n    case \"SIGN_OUT_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        isAuthenticated: false,\n      };\n    case \"GET_USER_REQUEST\":\n      return {\n        ...state\n      };\n      case \"GET_AVATAR_REQUEST\":\n        return {\n          ...state\n        };\n    case \"GET_USER_SUCCESS\":\n        return {\n          ...state,\n          isAuthenticated: true,\n          user: {\n            name: action.payload.name,\n            email: action.payload.email,\n            password: action.payload.password\n          }\n        };\n        case \"GET_AVATAR_SUCCESS\":\n          return {\n            ...state,\n            user: {\n              avatar: action.payload\n            }\n          };\n          case \"GET_AVATAR_FAILURE\":\n      return {\n        ...state,\n        error: action.payload\n      };\n    case \"GET_USER_FAILURE\":\n      return {\n        ...state,\n        isAuthenticated: false,\n        error: action.payload\n      };\n    case \"SIGN_IN_FAILURE\":\n    case \"SIGN_UP_FAILURE\":\n    case \"SIGN_OUT_FAILURE\":\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n        user: null,\n        isAuthenticated: false,\n      };\n    case \"SIGN_IN_REQUEST\":\n        return {\n            loading: true\n        }\n    case \"SIGN_UP_SUCCESS\":\n    case \"SIGN_IN_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        isAuthenticated: true,\n        user: action.payload.user,\n        token: action.payload.token\n      };\n    case \"SIGN_OUT_SUCCESS\":\n      return {\n        ...state,\n        isAuthenticated: false,\n        loading: false,\n        user: null,\n        token: \"\",\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer \n\n\n\n\n/**\n * Implementation of createReducer\n */\n\n//  const authReducer = createReducer(initState, (builder) => {\n//   builder\n//     .addMatcher(isAnyOf(signInRequest,signUpRequest), (state,action) => {  \n//         state.loading = true;\n//         state.isAuthenticated = false;  \n//     })\n//     .addCase(\"SIGN_OUT_REQUEST\", (state,action) => { \n//         state.isAuthenticated = false;   \n//     })\n//     .addMatcher(isAnyOf(getUserRequest,getAvatarRequest), (state,action) => {\n//         return state\n//     })\n//     .addCase(\"GET_USER_SUCCESS\", (state,action) => {  \n//         state.isAuthenticated = true;\n//         state.user.name = action.payload.name;\n//         state.user.email = action.payload.email;\n//         state.user.password = action.payload.password;  \n//     })\n//     .addCase(\"GET_AVATAR_SUCCESS\", (state,action) => {\n//         state.user.avatar = action.payload;\n//     })\n//     .addCase(\"GET_AVATAR_FAILURE\", (state,action) => {\n//         state.error = action.payload\n//     })\n//     .addCase(\"GET_USER_FAILURE\", (state,action) => {\n//         state.isAuthenticated = false;\n//         state.error = action.payload \n//     })\n//     .addCase(\"GET_USER_FAILURE\", (state,action) => {\n//         state.isAuthenticated = false;\n//         state.error = action.payload \n//     })\n//     .addMatcher(isAnyOf(signInFailure,signUpFailure,signOutFailure), (state,action) => {\n//         state.loading = false;\n//         state.error = action.payload;\n//         state.user = null;\n//         state.isAuthenticated = false;\n//     })\n//     .addCase(\"SIGN_IN_REQUEST\", (state,action) => {\n//         state.loading = true\n//     })\n//     .addMatcher(isAnyOf(signInSuccess,signUpSuccess), (state,action) => {\n//         state.loading = false\n//         state.isAuthenticated = true\n//         state.user = action.payload.user\n//         state.token = action.payload.token\n//     })\n//     .addCase(\"SIGN_OUT_SUCCESS\", (state,action) => {\n//         state.isAuthenticated = false\n//         state.loading = false\n//         state.user = null\n//         state.token = \"\"\n//     })\n//     .addDefaultCase((state, action) => {\n//         return state\n//     }) \n// }) "]},"metadata":{},"sourceType":"module"}