{"ast":null,"code":"const express = require('express');\n\nconst Airtable = require('airtable');\n\nconst router = new express.Router();\n/**\n * Formats\n */\n\nconst base = new Airtable({\n  apiKey: 'keyrZmwalTky2iuCt'\n}).base('appo0SrHe4WSkeW8J'); // Read Campaigns\n\nrouter.get('/formats', async (req, res) => {\n  const toReturn = [];\n  base('Formatos (ðŸ”’)').select({\n    fields: ['Formato', 'NomeDoFormato', 'VeÃ­culo', 'Tamanho', 'Meio', 'FormatoDoArquivo'],\n    view: 'Todos',\n    maxRecords: 150 // filterByFormula :`AND(NOT(Confirmed), Token = '${Token}')`,\n\n  }).eachPage(function page(records, next) {\n    records.forEach(function (rec) {\n      try {\n        toReturn.push(rec);\n      } catch (err) {\n        console.error(err);\n      }\n    });\n\n    try {\n      next();\n    } catch {\n      return;\n    }\n  }, function (e) {\n    if (e) {\n      return res.status(501).send(e);\n    }\n\n    res.send(toReturn);\n  });\n});\nmodule.exports = router;","map":{"version":3,"sources":["/Users/rodrigodaudskeff/Desktop/Mediabase/mediabase-app/server/src/routers/formats.js"],"names":["express","require","Airtable","router","Router","base","apiKey","get","req","res","toReturn","select","fields","view","maxRecords","eachPage","page","records","next","forEach","rec","push","err","console","error","e","status","send","module","exports"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAME,MAAM,GAAG,IAAIH,OAAO,CAACI,MAAZ,EAAf;AAEA;AACA;AACA;;AAEC,MAAMC,IAAI,GAAG,IAAIH,QAAJ,CAAa;AAACI,EAAAA,MAAM,EAAE;AAAT,CAAb,EAA4CD,IAA5C,CAAiD,mBAAjD,CAAb,C,CAID;;AACAF,MAAM,CAACI,GAAP,CAAW,UAAX,EAAuB,OAAOC,GAAP,EAAWC,GAAX,KAAmB;AAEtC,QAAMC,QAAQ,GAAG,EAAjB;AAEIL,EAAAA,IAAI,CAAC,eAAD,CAAJ,CACCM,MADD,CACQ;AAEJC,IAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,eAAZ,EAA6B,SAA7B,EAAuC,SAAvC,EAAiD,MAAjD,EAAyD,kBAAzD,CAFJ;AAGJC,IAAAA,IAAI,EAAE,OAHF;AAIJC,IAAAA,UAAU,EAAE,GAJR,CAKJ;;AALI,GADR,EAQGC,QARH,CAQa,SAASC,IAAT,CAAcC,OAAd,EAAuBC,IAAvB,EAA6B;AAEtCD,IAAAA,OAAO,CAACE,OAAR,CAAgB,UAASC,GAAT,EAAc;AAE1B,UAAI;AACAV,QAAAA,QAAQ,CAACW,IAAT,CAAcD,GAAd;AACH,OAFD,CAEE,OAAOE,GAAP,EAAY;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH;AAEJ,KARD;;AAUA,QAAI;AACAJ,MAAAA,IAAI;AACP,KAFD,CAEE,MAAM;AACJ;AACH;AAEJ,GA1BD,EA0BG,UAAUO,CAAV,EAAa;AAEZ,QAAIA,CAAJ,EAAO;AACH,aAAOhB,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBF,CAArB,CAAP;AACH;;AAEDhB,IAAAA,GAAG,CAACkB,IAAJ,CAASjB,QAAT;AACH,GAjCD;AAqCH,CAzCL;AA8CAkB,MAAM,CAACC,OAAP,GAAiB1B,MAAjB","sourcesContent":["const express = require('express')\nconst Airtable = require('airtable');\nconst router = new express.Router()\n\n/**\n * Formats\n */\n\n const base = new Airtable({apiKey: 'keyrZmwalTky2iuCt'}).base('appo0SrHe4WSkeW8J');\n\n\n\n// Read Campaigns\nrouter.get('/formats', async (req,res) => {\n\n    const toReturn = []\n\n        base('Formatos (ðŸ”’)')\n        .select({\n\n            fields: ['Formato', 'NomeDoFormato', 'VeÃ­culo','Tamanho','Meio', 'FormatoDoArquivo' ],\n            view: 'Todos',\n            maxRecords: 150\n            // filterByFormula :`AND(NOT(Confirmed), Token = '${Token}')`,\n\n        }).eachPage( function page(records, next) {\n\n            records.forEach(function(rec) {\n\n                try {\n                    toReturn.push(rec)\n                } catch (err) {\n                    console.error(err);\n                }\n\n            })\n\n            try {\n                next();\n            } catch { \n                return; \n            }\n\n        }, function (e) {\n\n            if (e) {\n                return res.status(501).send(e)\n            }\n\n            res.send(toReturn)\n        })\n\n    \n\n    }\n)\n\n\n\nmodule.exports = router"]},"metadata":{},"sourceType":"module"}