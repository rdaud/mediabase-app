{"ast":null,"code":"import _asyncToGenerator from\"/Users/rodrigodaudskeff/Desktop/Mediabase/mediabase-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/rodrigodaudskeff/Desktop/Mediabase/mediabase-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/rodrigodaudskeff/Desktop/Mediabase/mediabase-app/node_modules/@babel/runtime/regenerator/index.js\";import React,{useCallback,useState}from'react';import{useDispatch,connect}from'react-redux';import axios from'axios';import{FormWrapper,Profile,ProfileWrapper,InnerWrapper}from'./styles';import{MainContainer,TextInput,Button}from'../../components';import{PageHeader}from'./pageComponents';import{COLOR}from'../../tokens/colors';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ProfilePage=function ProfilePage(_ref){var match=_ref.match,userInfo=_ref.userInfo,token=_ref.token;var _useState=useState(userInfo.name),_useState2=_slicedToArray(_useState,2),nome=_useState2[0],setNome=_useState2[1];var _useState3=useState(userInfo.email),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),hasAvatar=_useState6[0],setHasAvatar=_useState6[1];var dispatch=useDispatch();var profilePicUrl=\"http://localhost:3001/users/\".concat(userInfo._id,\"/avatar\");var userProfileUrl=\"http://localhost:3001/users/me\";function checkIfHasProfilePic(){axios.get(profilePicUrl,{headers:{'Authorization':\"Bearer \".concat(token),'Access-Control-Allow-Origin':'*'}}).then(function(result){setHasAvatar(true);}).catch(function(error){console.log(error);});}var memoizedCheckIfHasProfilePic=useCallback(function(){checkIfHasProfilePic();},[hasAvatar]);var readProfile=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(userProfileUrl,{headers:{'Authorization':\"Bearer \".concat(token),'Access-Control-Allow-Origin':'*'}});case 2:data=_context.sent;if(data){_context.next=5;break;}throw new Error();case 5:console.log(data.avatar===undefined);case 6:case\"end\":return _context.stop();}}},_callee);}));return function readProfile(){return _ref2.apply(this,arguments);};}();readProfile();memoizedCheckIfHasProfilePic();return/*#__PURE__*/_jsxs(MainContainer,{children:[/*#__PURE__*/_jsx(PageHeader,{id:match.params.id}),/*#__PURE__*/_jsx(ProfileWrapper,{children:hasAvatar?/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Profile,{children:/*#__PURE__*/_jsx(\"img\",{width:\"200\",src:profilePicUrl})})}):/*#__PURE__*/_jsx(Profile,{children:/*#__PURE__*/_jsx(\"p\",{children:\"Adicionar foto de perfil\"})})}),/*#__PURE__*/_jsx(InnerWrapper,{children:/*#__PURE__*/_jsxs(FormWrapper,{children:[/*#__PURE__*/_jsx(TextInput,{variation:\"outline\",colorMode:\"light\",type:\"text\",onChange:function onChange(item){return setNome(item.target.value);},label:\"Nome\",value:nome}),/*#__PURE__*/_jsx(TextInput,{variation:\"outline\",colorMode:\"light\",type:\"email\",onChange:function onChange(item){return setEmail(item.target.value);},label:\"Email\",value:email}),/*#__PURE__*/_jsx(Button,{variation:\"primary\",style:{marginTop:'2rem'},corDaOrelha:COLOR.gray80,children:\"Salvar\"})]})})]});};function mapStateToProps(state){var userInfo=state.authentication.user;var token=state.authentication.token;return{userInfo:userInfo,token:token,state:state};}var connectedStore=connect(mapStateToProps)(ProfilePage);export{connectedStore as ProfilePage};","map":{"version":3,"sources":["/Users/rodrigodaudskeff/Desktop/Mediabase/mediabase-app/client/src/pages/Profile/index.jsx"],"names":["React","useCallback","useState","useDispatch","connect","axios","FormWrapper","Profile","ProfileWrapper","InnerWrapper","MainContainer","TextInput","Button","PageHeader","COLOR","ProfilePage","match","userInfo","token","name","nome","setNome","email","setEmail","hasAvatar","setHasAvatar","dispatch","profilePicUrl","_id","userProfileUrl","checkIfHasProfilePic","get","headers","then","result","catch","error","console","log","memoizedCheckIfHasProfilePic","readProfile","data","Error","avatar","undefined","params","id","item","target","value","marginTop","gray80","mapStateToProps","state","authentication","user","connectedStore"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport {  useDispatch, connect } from 'react-redux';\nimport axios from 'axios';\n\nimport { FormWrapper, Profile, ProfileWrapper, InnerWrapper } from './styles';\nimport { MainContainer, TextInput, Button } from '../../components';\nimport { PageHeader } from './pageComponents';\nimport { COLOR } from '../../tokens/colors';\n\n\n\n\n\n   \n\n\nconst ProfilePage = ( { match, userInfo, token }) => {\n\n   \n    const [ nome, setNome ] = useState(userInfo.name)\n    const [ email, setEmail ] = useState(userInfo.email)\n    const [ hasAvatar, setHasAvatar ] = useState(false)\n    const dispatch = useDispatch()\n\n    const profilePicUrl = `http://localhost:3001/users/${userInfo._id}/avatar`\n    const userProfileUrl = `http://localhost:3001/users/me`\n\n\n\n    function checkIfHasProfilePic() {\n      axios.get(profilePicUrl,{\n            headers: {\n                'Authorization': `Bearer ${token}`,\n                'Access-Control-Allow-Origin': '*',\n            }\n            }).then(result => {\n                setHasAvatar(true)\n            }).catch( error => {\n                console.log(error)\n            })\n        \n    }\n\n    const memoizedCheckIfHasProfilePic = useCallback(\n        () => {\n            checkIfHasProfilePic()\n        },\n        [hasAvatar],\n      );\n\n    const readProfile = async () => {\n        \n      \n            const data = await axios.get(userProfileUrl,{\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Access-Control-Allow-Origin': '*',\n                }})\n\n            if (!data) {\n                throw new Error()\n            }\n\n            console.log(data.avatar === undefined)\n                \n          \n      }\n\n    readProfile()\n    memoizedCheckIfHasProfilePic()\n\n\n\n\n    return (\n        <MainContainer>\n            <PageHeader id={match.params.id}/>\n                <ProfileWrapper>\n                { hasAvatar\n                            ?\n                     <>\n                       \n                        <Profile>\n                            \n                                <img width=\"200\" src={profilePicUrl}></img>\n                        </Profile>\n                     </>\n                    :\n                    <Profile>    \n\n                            <p>Adicionar foto de perfil</p>\n                            </Profile>\n\n                        }\n                   \n                </ProfileWrapper>\n            <InnerWrapper>   \n                <FormWrapper>\n                    <TextInput variation=\"outline\" colorMode=\"light\" type=\"text\" onChange={item => setNome(item.target.value)} label=\"Nome\" value={nome} />\n                    <TextInput variation=\"outline\" colorMode=\"light\" type=\"email\" onChange={ item => setEmail(item.target.value)} label=\"Email\" value={email} />\n                    <Button variation=\"primary\" style={{ marginTop: '2rem' }} corDaOrelha={COLOR.gray80}>Salvar</Button>\n                </FormWrapper>\n            </InnerWrapper>\n        </MainContainer>\n    )\n}\n\nfunction mapStateToProps(state) {\n    const userInfo = state.authentication.user\n    const { token } = state.authentication\n\n    return { userInfo, token, state }\n  }\n\nconst connectedStore = connect(mapStateToProps)(ProfilePage)\n\nexport { connectedStore as ProfilePage }\n\n"]},"metadata":{},"sourceType":"module"}