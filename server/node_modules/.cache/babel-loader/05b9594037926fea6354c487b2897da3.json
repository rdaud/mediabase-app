{"ast":null,"code":"import axios from\"axios\";// Fetch Formatos from Airtable\nvar getFormatosSuccess=function getFormatosSuccess(data){return{type:'GET_FORMATOS_SUCCESS',payload:data};};var getFormatosRequest=function getFormatosRequest(){return{type:'GET_FORMATOS_REQUEST'};};var getFormatosFailure=function getFormatosFailure(error){return{type:'GET_FORMATOS_FAILURE',payload:error};};export var getFormatos=function getFormatos(){return function(dispatch,getState){dispatch(getFormatosRequest());var arr=[];axios.get('/formats',{'Content-Type':'application/json'}).then(function(result){dispatch(getFormatosSuccess(result.data));}).catch(function(error){console.log(error);dispatch(getFormatosFailure(error));});};};","map":{"version":3,"sources":["/Users/rodrigodaudskeff/Desktop/Mediabase/mediabase-app/client/src/redux/actions/formatsActions.js"],"names":["axios","getFormatosSuccess","data","type","payload","getFormatosRequest","getFormatosFailure","error","getFormatos","dispatch","getState","arr","get","then","result","catch","console","log"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA;AAEA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,IAAD,CAAU,CACjC,MAAO,CACLC,IAAI,CAAE,sBADD,CAELC,OAAO,CAAEF,IAFJ,CAAP,CAID,CALH,CAOE,GAAMG,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC/B,MAAO,CACLF,IAAI,CAAE,sBADD,CAAP,CAGD,CAJD,CAMA,GAAMG,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,KAAD,CAAW,CACpC,MAAO,CACLJ,IAAI,CAAE,sBADD,CAELC,OAAO,CAAEG,KAFJ,CAAP,CAID,CALD,CAQA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CAE/B,MAAO,UAACC,QAAD,CAAUC,QAAV,CAAuB,CAE5BD,QAAQ,CAACJ,kBAAkB,EAAnB,CAAR,CAEA,GAAIM,CAAAA,GAAG,CAAG,EAAV,CAEAX,KAAK,CAACY,GAAN,CAAU,UAAV,CAAqB,CACnB,eAAgB,kBADG,CAArB,EAEGC,IAFH,CAEQ,SAAAC,MAAM,CAAI,CAChBL,QAAQ,CAACR,kBAAkB,CAACa,MAAM,CAACZ,IAAR,CAAnB,CAAR,CACD,CAJD,EAIGa,KAJH,CAIS,SAAAR,KAAK,CAAI,CAChBS,OAAO,CAACC,GAAR,CAAYV,KAAZ,EACAE,QAAQ,CAACH,kBAAkB,CAACC,KAAD,CAAnB,CAAR,CACD,CAPD,EAQD,CAdD,CAeD,CAjBM","sourcesContent":["import axios from \"axios\";\n\n// Fetch Formatos from Airtable\n\nconst getFormatosSuccess = (data) => {\n    return {\n      type: 'GET_FORMATOS_SUCCESS',\n      payload: data\n    };\n  };\n  \n  const getFormatosRequest = () => {\n    return {\n      type: 'GET_FORMATOS_REQUEST'\n    };\n  };\n  \n  const getFormatosFailure = (error) => {\n    return {\n      type: 'GET_FORMATOS_FAILURE',\n      payload: error\n    };\n  };\n  \n  \n  export const getFormatos = () => {\n  \n    return (dispatch,getState) => {\n  \n      dispatch(getFormatosRequest());\n\n      let arr = [];\n  \n      axios.get('/formats',{\n        'Content-Type': 'application/json',\n      }).then(result => {\n        dispatch(getFormatosSuccess(result.data))\n      }).catch(error => {\n        console.log(error)\n        dispatch(getFormatosFailure(error))\n      })\n    }\n  }\n\n"]},"metadata":{},"sourceType":"module"}