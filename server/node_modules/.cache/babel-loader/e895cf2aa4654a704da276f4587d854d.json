{"ast":null,"code":"import _slicedToArray from\"/Users/rodrigodaudskeff/Desktop/Mediabase/mediabase-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from\"react\";import{useHistory}from\"react-router-dom\";import{useDispatch,useSelector}from\"react-redux\";import{signUp}from\"../../redux/actions/usersActions\";import{Button,FormGroup,TextInput,Link}from\"../../components\";import logo from\"../../assets/logo/logo-complete.svg\";import{Hero,Wrapper,Logo,FormContainer}from'./styles';import{Info2,Info1}from\"../../components/Typography\";import{COLOR}from\"../../tokens/colors\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var SignUpPage=function SignUpPage(){var dispatch=useDispatch();var _useState=useState(''),_useState2=_slicedToArray(_useState,2),password=_useState2[0],setPassword=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),confirmedPassword=_useState4[0],setConfirmedPassword=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),email=_useState6[0],setEmail=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),name=_useState8[0],setName=_useState8[1];var _useState9=useState(true),_useState10=_slicedToArray(_useState9,2),buttonState=_useState10[0],setButtonState=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),errorState=_useState12[0],setErrorState=_useState12[1];var history=useHistory();var _useSelector=useSelector(function(state){return state.authentication;}),user=_useSelector.user;function handleClickOnCadastrar(event){event.preventDefault();dispatch(signUp({name:name,email:email,password:password},history));};function onBlurHandler(){if(password!==confirmedPassword){setErrorState('Senhas precisam ser iguais');}else{setErrorState('');}}function validateFields(){if(name!==''&&email!==''&&password!==''&&confirmedPassword!==''&&password===confirmedPassword){setButtonState(false);}else{setButtonState(true);}}useEffect(function(){validateFields();},[name,email,password,confirmedPassword]);return/*#__PURE__*/_jsx(Hero,{children:/*#__PURE__*/_jsxs(Wrapper,{children:[/*#__PURE__*/_jsx(Logo,{children:/*#__PURE__*/_jsx(\"img\",{src:logo,alt:\"Mediabase\"})}),/*#__PURE__*/_jsxs(FormContainer,{onSubmit:handleClickOnCadastrar,children:[/*#__PURE__*/_jsx(FormGroup,{children:/*#__PURE__*/_jsx(TextInput,{variation:\"filled\",colorMode:\"dark\",onChange:function onChange(e){return setName(e.target.value);},value:name,placeholder:\"Nome\",type:\"text\"})}),/*#__PURE__*/_jsx(FormGroup,{children:/*#__PURE__*/_jsx(TextInput,{variation:\"filled\",colorMode:\"dark\",onChange:function onChange(e){return setEmail(e.target.value);},value:email,placeholder:\"Email\",type:\"email\"})}),/*#__PURE__*/_jsx(FormGroup,{children:/*#__PURE__*/_jsx(TextInput,{variation:\"filled\",colorMode:\"dark\",onChange:function onChange(e){return setPassword(e.target.value);},value:password,placeholder:\"Senha\",type:\"password\"})}),/*#__PURE__*/_jsx(FormGroup,{children:/*#__PURE__*/_jsx(TextInput,{variation:\"filled\",colorMode:\"dark\",onChange:function onChange(e){return setConfirmedPassword(e.target.value);},value:confirmedPassword,placeholder:\"Confirmar senha\",type:\"password\",onBlur:onBlurHandler,error:false||errorState})}),/*#__PURE__*/_jsx(\"div\",{style:{paddingTop:\"1rem\",paddingBottom:\"1rem\",width:\"100%\",display:\"inline-flex\",justifyContent:\"space-between\",alignItems:\"center\"},children:/*#__PURE__*/_jsx(Button,{disabled:buttonState,variation:\"primary\",children:\"Cadastrar\"})}),/*#__PURE__*/_jsx(\"div\",{style:{position:\"relative\",textAlign:\"center\",paddingTop:\"3rem\",borderTop:\"1px solid rgba(255,255,255,.15)\"},children:/*#__PURE__*/_jsxs(Info2,{color:\"gray\",children:[\"J\\xE1 \\xE9 cadastrado? \",/*#__PURE__*/_jsx(Link,{to:\"/entrar\",color:COLOR.brandRed90,hoverColor:COLOR.brandRed90,children:\"Fa\\xE7a o login\"})]})})]})]})});};","map":{"version":3,"sources":["/Users/rodrigodaudskeff/Desktop/Mediabase/mediabase-app/client/src/pages/SignUp/index.jsx"],"names":["React","useEffect","useState","useHistory","useDispatch","useSelector","signUp","Button","FormGroup","TextInput","Link","Hero","Wrapper","Logo","FormContainer","Info2","Info1","COLOR","SignUpPage","dispatch","password","setPassword","confirmedPassword","setConfirmedPassword","email","setEmail","name","setName","buttonState","setButtonState","errorState","setErrorState","history","state","authentication","user","handleClickOnCadastrar","event","preventDefault","onBlurHandler","validateFields","logo","e","target","value","paddingTop","paddingBottom","width","display","justifyContent","alignItems","position","textAlign","borderTop","brandRed90"],"mappings":"6IAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAAUC,UAAV,KAA4B,kBAA5B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAEA,OAASC,MAAT,KAAuB,kCAAvB,CACA,OAASC,MAAT,CAAiBC,SAAjB,CAA4BC,SAA5B,CAAuCC,IAAvC,KAAmD,kBAAnD,C,sDAEA,OAASC,IAAT,CAAgBC,OAAhB,CAAyBC,IAAzB,CAA+BC,aAA/B,KAAoD,UAApD,CACA,OAAUC,KAAV,CAAiBC,KAAjB,KAA8B,6BAA9B,CACA,OAASC,KAAT,KAAsB,qBAAtB,C,wFAKA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CAE5B,GAAMC,CAAAA,QAAQ,CAAGf,WAAW,EAA5B,CACA,cAAkCF,QAAQ,CAAC,EAAD,CAA1C,wCAAQkB,QAAR,eAAkBC,WAAlB,eACA,eAAoDnB,QAAQ,CAAC,EAAD,CAA5D,yCAAQoB,iBAAR,eAA2BC,oBAA3B,eACA,eAA4BrB,QAAQ,CAAC,EAAD,CAApC,yCAAQsB,KAAR,eAAeC,QAAf,eACA,eAA0BvB,QAAQ,CAAC,EAAD,CAAlC,yCAAQwB,IAAR,eAAcC,OAAd,eACA,eAAwCzB,QAAQ,CAAC,IAAD,CAAhD,0CAAQ0B,WAAR,gBAAqBC,cAArB,gBACA,gBAAsC3B,QAAQ,CAAC,EAAD,CAA9C,2CAAQ4B,UAAR,gBAAoBC,aAApB,gBAGA,GAAMC,CAAAA,OAAO,CAAG7B,UAAU,EAA1B,CACA,iBAAiBE,WAAW,CAAE,SAAA4B,KAAK,QAAIA,CAAAA,KAAK,CAACC,cAAV,EAAP,CAA5B,CAAQC,IAAR,cAAQA,IAAR,CAEA,QAASC,CAAAA,sBAAT,CAAgCC,KAAhC,CAAuC,CACnCA,KAAK,CAACC,cAAN,GACAnB,QAAQ,CAACb,MAAM,CAAC,CAAEoB,IAAI,CAAJA,IAAF,CAAQF,KAAK,CAALA,KAAR,CAAeJ,QAAQ,CAARA,QAAf,CAAD,CAA4BY,OAA5B,CAAP,CAAR,CACH,EAED,QAASO,CAAAA,aAAT,EAAyB,CACrB,GAAInB,QAAQ,GAAKE,iBAAjB,CAAoC,CAChCS,aAAa,CAAC,4BAAD,CAAb,CACH,CAFD,IAEO,CACHA,aAAa,CAAC,EAAD,CAAb,CACH,CACJ,CAED,QAASS,CAAAA,cAAT,EAA0B,CACtB,GACId,IAAI,GAAK,EAAT,EACAF,KAAK,GAAK,EADV,EAEAJ,QAAQ,GAAK,EAFb,EAGAE,iBAAiB,GAAK,EAHtB,EAIAF,QAAQ,GAAKE,iBALjB,CAME,CACEO,cAAc,CAAC,KAAD,CAAd,CACH,CARD,IAQO,CACHA,cAAc,CAAC,IAAD,CAAd,CACH,CAEJ,CAED5B,SAAS,CAAE,UAAM,CACbuC,cAAc,GACjB,CAFQ,CAEN,CAACd,IAAD,CAAMF,KAAN,CAAYJ,QAAZ,CAAqBE,iBAArB,CAFM,CAAT,CAKI,mBAEI,KAAC,IAAD,wBACI,MAAC,OAAD,yBACI,KAAC,IAAD,wBACI,YAAK,GAAG,CAAEmB,IAAV,CAAgB,GAAG,CAAC,WAApB,EADJ,EADJ,cAKQ,MAAC,aAAD,EAAe,QAAQ,CAAEL,sBAAzB,wBACA,KAAC,SAAD,wBACQ,KAAC,SAAD,EACK,SAAS,CAAC,QADf,CAEK,SAAS,CAAC,MAFf,CAGI,QAAQ,CAAE,kBAAAM,CAAC,QAAIf,CAAAA,OAAO,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX,EAHf,CAKI,KAAK,CAAElB,IALX,CAMI,WAAW,CAAC,MANhB,CAOI,IAAI,CAAC,MAPT,EADR,EADA,cAYI,KAAC,SAAD,wBACI,KAAC,SAAD,EACK,SAAS,CAAC,QADf,CAEK,SAAS,CAAC,MAFf,CAGI,QAAQ,CAAE,kBAAAgB,CAAC,QAAIjB,CAAAA,QAAQ,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ,EAHf,CAKI,KAAK,CAAEpB,KALX,CAMI,WAAW,CAAC,OANhB,CAOI,IAAI,CAAC,OAPT,EADJ,EAZJ,cAuBI,KAAC,SAAD,wBACI,KAAC,SAAD,EACK,SAAS,CAAC,QADf,CAEK,SAAS,CAAC,MAFf,CAGI,QAAQ,CAAE,kBAAAkB,CAAC,QAAIrB,CAAAA,WAAW,CAC1BqB,CAAC,CAACC,MAAF,CAASC,KADiB,CAAf,EAHf,CAKI,KAAK,CAAExB,QALX,CAMI,WAAW,CAAC,OANhB,CAOI,IAAI,CAAC,UAPT,EADJ,EAvBJ,cAkCI,KAAC,SAAD,wBACI,KAAC,SAAD,EACI,SAAS,CAAC,QADd,CAEI,SAAS,CAAC,MAFd,CAGI,QAAQ,CAAE,kBAAAsB,CAAC,QAAInB,CAAAA,oBAAoB,CACnCmB,CAAC,CAACC,MAAF,CAASC,KAD0B,CAAxB,EAHf,CAKI,KAAK,CAAEtB,iBALX,CAMI,WAAW,CAAC,iBANhB,CAOI,IAAI,CAAC,UAPT,CAQI,MAAM,CAAEiB,aARZ,CASI,KAAK,CAAG,OAAST,UATrB,EADJ,EAlCJ,cAgDI,YAAK,KAAK,CAAE,CACRe,UAAU,CAAE,MADJ,CAERC,aAAa,CAAE,MAFP,CAGRC,KAAK,CAAE,MAHC,CAIRC,OAAO,CAAE,aAJD,CAKRC,cAAc,CAAE,eALR,CAMRC,UAAU,CAAE,QANJ,CAAZ,uBAQI,KAAC,MAAD,EAAQ,QAAQ,CAAEtB,WAAlB,CAA+B,SAAS,CAAC,SAAzC,uBARJ,EAhDJ,cA2DI,YAAK,KAAK,CAAE,CACRuB,QAAQ,CAAE,UADF,CAERC,SAAS,CAAE,QAFH,CAGRP,UAAU,CAAE,MAHJ,CAIRQ,SAAS,CAAE,iCAJH,CAAZ,uBAMI,MAAC,KAAD,EAAO,KAAK,CAAC,MAAb,kDAAqC,KAAC,IAAD,EAAM,EAAE,CAAC,SAAT,CAAmB,KAAK,CAAEpC,KAAK,CAACqC,UAAhC,CAA4C,UAAU,CAAErC,KAAK,CAACqC,UAA9D,6BAArC,GANJ,EA3DJ,GALR,GADJ,EAFJ,CAgFP,CA/HM","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {  useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { signUp } from \"../../redux/actions/usersActions\";\nimport { Button, FormGroup, TextInput, Link } from \"../../components\";\nimport logo from \"../../assets/logo/logo-complete.svg\"\nimport { Hero,  Wrapper, Logo, FormContainer } from './styles';\nimport {  Info2, Info1 } from \"../../components/Typography\";\nimport { COLOR } from \"../../tokens/colors\";\n\n\n\n\nexport const SignUpPage = () => {\n\n    const dispatch = useDispatch();\n    const [ password, setPassword ] = useState('');\n    const [ confirmedPassword, setConfirmedPassword ] = useState('');\n    const [ email, setEmail ] = useState('');\n    const [ name, setName ] = useState('');\n    const [ buttonState, setButtonState ] = useState(true);\n    const [ errorState, setErrorState ] = useState('');\n\n\n    const history = useHistory();\n    const { user } = useSelector( state => state.authentication )\n\n    function handleClickOnCadastrar(event) {\n        event.preventDefault();\n        dispatch(signUp({ name, email, password }, history));\n    };\n\n    function onBlurHandler() {\n        if (password !== confirmedPassword) {\n            setErrorState('Senhas precisam ser iguais')\n        } else {\n            setErrorState('')\n        }\n    }\n\n    function validateFields() {\n        if (\n            name !== '' &&\n            email !== '' &&\n            password !== '' &&\n            confirmedPassword !== '' &&\n            password === confirmedPassword\n        ) {\n            setButtonState(false)\n        } else {\n            setButtonState(true)\n        }\n\n    }\n\n    useEffect( () => {\n        validateFields()\n    }, [name,email,password,confirmedPassword])\n      \n\n        return (\n\n            <Hero>\n                <Wrapper>\n                    <Logo>\n                        <img src={logo} alt=\"Mediabase\" />\n                    </Logo>\n                    {/* <Info1 style={{ textAlign: \"center\" }} color={COLOR.white}>Bem vindo ao Mediabase</Info1> */}\n                        <FormContainer onSubmit={handleClickOnCadastrar}> \n                        <FormGroup>\n                                <TextInput\n                                     variation=\"filled\"\n                                     colorMode=\"dark\"\n                                    onChange={e => setName(e.target.value,\n                                   )}\n                                    value={name}\n                                    placeholder=\"Nome\"\n                                    type=\"text\"\n                                    />\n                            </FormGroup>\n                            <FormGroup>\n                                <TextInput\n                                     variation=\"filled\"\n                                     colorMode=\"dark\"\n                                    onChange={e => setEmail(e.target.value,\n                                   )}\n                                    value={email}\n                                    placeholder=\"Email\"\n                                    type=\"email\"\n                                    />\n                            </FormGroup>\n                            <FormGroup>\n                                <TextInput\n                                     variation=\"filled\"\n                                     colorMode=\"dark\"\n                                    onChange={e => setPassword(\n                                    e.target.value)}\n                                    value={password}\n                                    placeholder=\"Senha\"\n                                    type=\"password\"\n                                    />\n                            </FormGroup>\n                            <FormGroup>\n                                <TextInput\n                                    variation=\"filled\"\n                                    colorMode=\"dark\"\n                                    onChange={e => setConfirmedPassword(\n                                    e.target.value)}\n                                    value={confirmedPassword}\n                                    placeholder=\"Confirmar senha\"\n                                    type=\"password\"\n                                    onBlur={onBlurHandler}\n                                    error={ false || errorState }\n                                    />\n                            </FormGroup>\n\n                            <div style={{ \n                                paddingTop: \"1rem\",\n                                paddingBottom: \"1rem\",\n                                width: \"100%\",\n                                display: \"inline-flex\",\n                                justifyContent: \"space-between\",\n                                alignItems: \"center\"\n                                }}>\n                                <Button disabled={buttonState} variation=\"primary\">Cadastrar</Button>\n                                \n                            </div>\n                            <div style={{\n                                position: \"relative\",\n                                textAlign: \"center\",\n                                paddingTop: \"3rem\",\n                                borderTop: \"1px solid rgba(255,255,255,.15)\"\n                            }}>\n                                <Info2 color=\"gray\">Já é cadastrado? <Link to=\"/entrar\" color={COLOR.brandRed90} hoverColor={COLOR.brandRed90}>Faça o login</Link></Info2>\n                            </div>\n                        </FormContainer>\n                    </Wrapper>\n                </Hero>\n        );\n    \n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}