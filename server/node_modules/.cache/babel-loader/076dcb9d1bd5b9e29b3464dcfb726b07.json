{"ast":null,"code":"const express = require('express');\n\nconst Criativo = require('../models/criativo');\n\nconst Campaign = require('../models/campaign');\n\nconst router = new express.Router();\n\nconst auth = require('../middleware/auth');\n\nconst multer = require('multer');\n\nconst upload = multer({\n  limits: {\n    fileSize: 1000000\n  },\n\n  fileFilter(req, file, cb) {\n    if (!file.originalname.match(/\\.(jpg|jpeg|png|pdf)$/)) {\n      return cb(new Error('Por favor, envie apenas arquivos no formato jpg ou png.'));\n    }\n\n    cb(undefined, true);\n  }\n\n}); // Create Criativo\n\nrouter.post('/campaigns/:id/criativos', auth, upload.single('imagem'), async (req, res) => {\n  const file = req.file;\n  const criativo = new Criativo({ ...req.body,\n    imagem: req.file.buffer,\n    owner: req.user._id,\n    campaign: req.params.id\n  });\n\n  try {\n    const campaign = await Campaign.findOne({\n      _id: req.params.id,\n      owner: req.user._id\n    });\n\n    if (!campaign) {\n      return res.status(404).send();\n    }\n\n    await criativo.save();\n    res.status(201).send(criativo);\n  } catch (e) {\n    res.status(400).send(e);\n  }\n}); // Get Criativos\n\nrouter.get('/criativos/:id', auth, async (req, res) => {\n  try {\n    const criativos = await Criativo.find({\n      campaign: req.params.id\n    });\n\n    if (!criativos) {\n      return res.status(404).send();\n    }\n\n    res.send(criativos);\n  } catch (e) {\n    console.log(e);\n    res.status(500).send(e);\n  }\n}); // Get Criativo by ID\n\nrouter.get('/criativo/:id', auth, async (req, res) => {\n  try {\n    const criativo = await Criativo.findById({\n      _id: req.params.id\n    });\n\n    if (!criativo) {\n      return res.status(404).send();\n    }\n\n    res.send(criativo);\n  } catch (e) {\n    console.log(e);\n    res.status(500).send(e);\n  }\n}); // Read Image\n\nrouter.get('/criativo/imagem/:id', async (req, res) => {\n  try {\n    const criativo = await Criativo.findById(req.params.id);\n\n    if (!criativo) {\n      throw new Error();\n    }\n\n    res.set('Content-Type', 'image/jpg');\n    res.send(criativo.imagem);\n  } catch (e) {\n    res.status(400).send(e);\n  }\n}); // Delete image\n\nrouter.delete('/criativos/:id', auth, async (req, res) => {\n  try {\n    const criativo = await Criativo.findOneAndDelete({\n      _id: req.params.id,\n      owner: req.user._id\n    });\n\n    if (!criativo) {\n      return res.status(404).send();\n    }\n\n    res.send(criativo);\n  } catch (e) {\n    res.status(500).send();\n  }\n}); // Update Criativo\n\nrouter.patch('/criativos/:id', auth, upload.single('imagem'), async (req, res) => {\n  const updates = Object.keys(req.body).concat(req.file.fieldname);\n  const allowedUpdates = ['nome', 'imagem', 'descricao'];\n  const isValidOperation = updates.every(update => allowedUpdates.includes(update));\n  console.log(updates);\n\n  if (!isValidOperation) {\n    res.status(404).send('Error: Invalid update');\n  }\n\n  try {\n    const criativo = await Criativo.findOne({\n      _id: req.params.id\n    });\n\n    if (!criativo) {\n      return res.status(404).send();\n    }\n\n    updates.forEach(update => {\n      if (update === \"imagem\") {\n        return criativo[update] = req.file.buffer;\n      }\n\n      return criativo[update] = req.body[update];\n    });\n    await criativo.save();\n    res.send(criativo);\n  } catch (e) {\n    res.status(400).send();\n  }\n});\nmodule.exports = router;","map":{"version":3,"sources":["/Users/rodrigodaudskeff/Desktop/Mediabase/mediabase-app/server/src/routers/criativo.js"],"names":["express","require","Criativo","Campaign","router","Router","auth","multer","upload","limits","fileSize","fileFilter","req","file","cb","originalname","match","Error","undefined","post","single","res","criativo","body","imagem","buffer","owner","user","_id","campaign","params","id","findOne","status","send","save","e","get","criativos","find","console","log","findById","set","delete","findOneAndDelete","patch","updates","Object","keys","concat","fieldname","allowedUpdates","isValidOperation","every","update","includes","forEach","module","exports"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,oBAAD,CAAxB;;AACA,MAAME,QAAQ,GAAGF,OAAO,CAAC,oBAAD,CAAxB;;AACA,MAAMG,MAAM,GAAG,IAAIJ,OAAO,CAACK,MAAZ,EAAf;;AACA,MAAMC,IAAI,GAAGL,OAAO,CAAC,oBAAD,CAApB;;AACA,MAAMM,MAAM,GAAGN,OAAO,CAAC,QAAD,CAAtB;;AAGA,MAAMO,MAAM,GAAGD,MAAM,CAAC;AAClBE,EAAAA,MAAM,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN,GADU;;AAIlBC,EAAAA,UAAU,CAACC,GAAD,EAAKC,IAAL,EAAUC,EAAV,EAAc;AACpB,QAAI,CAACD,IAAI,CAACE,YAAL,CAAkBC,KAAlB,CAAwB,uBAAxB,CAAL,EAAuD;AACnD,aAAOF,EAAE,CAAC,IAAIG,KAAJ,CAAU,yDAAV,CAAD,CAAT;AACH;;AACDH,IAAAA,EAAE,CAACI,SAAD,EAAW,IAAX,CAAF;AACH;;AATiB,CAAD,CAArB,C,CAYA;;AACAd,MAAM,CAACe,IAAP,CAAY,0BAAZ,EAAwCb,IAAxC,EAA8CE,MAAM,CAACY,MAAP,CAAc,QAAd,CAA9C,EAAuE,OAAOR,GAAP,EAAWS,GAAX,KAAmB;AAEtF,QAAMR,IAAI,GAAGD,GAAG,CAACC,IAAjB;AAEA,QAAMS,QAAQ,GAAG,IAAIpB,QAAJ,CAAa,EAC1B,GAAGU,GAAG,CAACW,IADmB;AAE1BC,IAAAA,MAAM,EAAEZ,GAAG,CAACC,IAAJ,CAASY,MAFS;AAG1BC,IAAAA,KAAK,EAAEd,GAAG,CAACe,IAAJ,CAASC,GAHU;AAI1BC,IAAAA,QAAQ,EAAEjB,GAAG,CAACkB,MAAJ,CAAWC;AAJK,GAAb,CAAjB;;AAOA,MAAI;AAEA,UAAMF,QAAQ,GAAG,MAAM1B,QAAQ,CAAC6B,OAAT,CAAiB;AAAEJ,MAAAA,GAAG,EAAEhB,GAAG,CAACkB,MAAJ,CAAWC,EAAlB;AAAsBL,MAAAA,KAAK,EAAEd,GAAG,CAACe,IAAJ,CAASC;AAAtC,KAAjB,CAAvB;;AAEA,QAAI,CAACC,QAAL,EAAe;AACX,aAAOR,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,EAAP;AACH;;AAED,UAAMZ,QAAQ,CAACa,IAAT,EAAN;AACAd,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBZ,QAArB;AACH,GAVD,CAUE,OAAOc,CAAP,EAAU;AACRf,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBE,CAArB;AACH;AAEJ,CAzBD,E,CA2BA;;AACAhC,MAAM,CAACiC,GAAP,CAAW,gBAAX,EAA6B/B,IAA7B,EAAmC,OAAOM,GAAP,EAAWS,GAAX,KAAmB;AAElD,MAAI;AAEA,UAAMiB,SAAS,GAAG,MAAMpC,QAAQ,CAACqC,IAAT,CAAc;AAAEV,MAAAA,QAAQ,EAAEjB,GAAG,CAACkB,MAAJ,CAAWC;AAAvB,KAAd,CAAxB;;AAEA,QAAI,CAACO,SAAL,EAAgB;AACZ,aAAOjB,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,EAAP;AACH;;AAEDb,IAAAA,GAAG,CAACa,IAAJ,CAASI,SAAT;AAEH,GAVD,CAUE,OAAOF,CAAP,EAAU;AACRI,IAAAA,OAAO,CAACC,GAAR,CAAYL,CAAZ;AACAf,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBE,CAArB;AACH;AAEJ,CAjBD,E,CAmBA;;AACAhC,MAAM,CAACiC,GAAP,CAAW,eAAX,EAA4B/B,IAA5B,EAAkC,OAAOM,GAAP,EAAWS,GAAX,KAAmB;AAEjD,MAAI;AAEA,UAAMC,QAAQ,GAAG,MAAMpB,QAAQ,CAACwC,QAAT,CAAkB;AAAEd,MAAAA,GAAG,EAAEhB,GAAG,CAACkB,MAAJ,CAAWC;AAAlB,KAAlB,CAAvB;;AAEA,QAAI,CAACT,QAAL,EAAe;AACX,aAAOD,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,EAAP;AACH;;AAEDb,IAAAA,GAAG,CAACa,IAAJ,CAASZ,QAAT;AAEH,GAVD,CAUE,OAAOc,CAAP,EAAU;AACRI,IAAAA,OAAO,CAACC,GAAR,CAAYL,CAAZ;AACAf,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBE,CAArB;AACH;AAEJ,CAjBD,E,CAmBA;;AACAhC,MAAM,CAACiC,GAAP,CAAW,sBAAX,EAAmC,OAAOzB,GAAP,EAAWS,GAAX,KAAmB;AAElD,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMpB,QAAQ,CAACwC,QAAT,CAAkB9B,GAAG,CAACkB,MAAJ,CAAWC,EAA7B,CAAvB;;AACA,QAAI,CAACT,QAAL,EAAe;AACX,YAAM,IAAIL,KAAJ,EAAN;AACH;;AACDI,IAAAA,GAAG,CAACsB,GAAJ,CAAQ,cAAR,EAAwB,WAAxB;AAEAtB,IAAAA,GAAG,CAACa,IAAJ,CAASZ,QAAQ,CAACE,MAAlB;AACH,GARD,CAQE,OAAOY,CAAP,EAAU;AACRf,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBE,CAArB;AACH;AAEJ,CAdD,E,CAgBA;;AACAhC,MAAM,CAACwC,MAAP,CAAc,gBAAd,EAAgCtC,IAAhC,EAAsC,OAAOM,GAAP,EAAWS,GAAX,KAAmB;AACrD,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMpB,QAAQ,CAAC2C,gBAAT,CAA0B;AAAEjB,MAAAA,GAAG,EAAEhB,GAAG,CAACkB,MAAJ,CAAWC,EAAlB;AAAsBL,MAAAA,KAAK,EAAEd,GAAG,CAACe,IAAJ,CAASC;AAAtC,KAA1B,CAAvB;;AACA,QAAI,CAACN,QAAL,EAAe;AACX,aAAOD,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,EAAP;AACH;;AACDb,IAAAA,GAAG,CAACa,IAAJ,CAASZ,QAAT;AACH,GAND,CAME,OAAOc,CAAP,EAAU;AACRf,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB;AACH;AAEJ,CAXD,E,CAaA;;AACA9B,MAAM,CAAC0C,KAAP,CAAa,gBAAb,EAA8BxC,IAA9B,EAAoCE,MAAM,CAACY,MAAP,CAAc,QAAd,CAApC,EAA6D,OAAMR,GAAN,EAAUS,GAAV,KAAkB;AAE3E,QAAM0B,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYrC,GAAG,CAACW,IAAhB,EAAsB2B,MAAtB,CAA6BtC,GAAG,CAACC,IAAJ,CAASsC,SAAtC,CAAhB;AACA,QAAMC,cAAc,GAAG,CAAC,MAAD,EAAQ,QAAR,EAAiB,WAAjB,CAAvB;AACA,QAAMC,gBAAgB,GAAGN,OAAO,CAACO,KAAR,CAAeC,MAAM,IAAIH,cAAc,CAACI,QAAf,CAAwBD,MAAxB,CAAzB,CAAzB;AAEAf,EAAAA,OAAO,CAACC,GAAR,CAAYM,OAAZ;;AAEA,MAAI,CAACM,gBAAL,EAAuB;AACnBhC,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,uBAArB;AACH;;AAED,MAAI;AAEA,UAAMZ,QAAQ,GAAG,MAAMpB,QAAQ,CAAC8B,OAAT,CAAiB;AAAEJ,MAAAA,GAAG,EAAEhB,GAAG,CAACkB,MAAJ,CAAWC;AAAlB,KAAjB,CAAvB;;AAGA,QAAI,CAACT,QAAL,EAAe;AACX,aAAOD,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,EAAP;AACH;;AAEDa,IAAAA,OAAO,CAACU,OAAR,CAAgBF,MAAM,IAAI;AACtB,UAAIA,MAAM,KAAK,QAAf,EAAyB;AACrB,eAAOjC,QAAQ,CAACiC,MAAD,CAAR,GAAmB3C,GAAG,CAACC,IAAJ,CAASY,MAAnC;AACH;;AACD,aAAOH,QAAQ,CAACiC,MAAD,CAAR,GAAmB3C,GAAG,CAACW,IAAJ,CAASgC,MAAT,CAA1B;AAEH,KAND;AAOA,UAAMjC,QAAQ,CAACa,IAAT,EAAN;AACAd,IAAAA,GAAG,CAACa,IAAJ,CAASZ,QAAT;AAEH,GAnBD,CAmBE,OAAOc,CAAP,EAAU;AACRf,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB;AACH;AAEJ,CAnCD;AAuCAwB,MAAM,CAACC,OAAP,GAAiBvD,MAAjB","sourcesContent":["const express = require('express')\nconst Criativo = require('../models/criativo')\nconst Campaign = require('../models/campaign')\nconst router = new express.Router()\nconst auth = require('../middleware/auth')\nconst multer = require('multer')\n\n\nconst upload = multer({\n    limits: {\n        fileSize: 1000000\n    },\n    fileFilter(req,file,cb) {\n        if (!file.originalname.match(/\\.(jpg|jpeg|png|pdf)$/)) {\n            return cb(new Error('Por favor, envie apenas arquivos no formato jpg ou png.'))\n        }\n        cb(undefined,true)\n    }\n})\n\n// Create Criativo\nrouter.post('/campaigns/:id/criativos', auth, upload.single('imagem'), async (req,res) => {\n    \n    const file = req.file\n\n    const criativo = new Criativo({\n        ...req.body,\n        imagem: req.file.buffer,\n        owner: req.user._id,\n        campaign: req.params.id,\n    })\n\n    try {\n\n        const campaign = await Campaign.findOne({ _id: req.params.id, owner: req.user._id})\n        \n        if (!campaign) {\n            return res.status(404).send()\n        }\n             \n        await criativo.save()\n        res.status(201).send(criativo)\n    } catch (e) {\n        res.status(400).send(e)\n    }\n\n})\n\n// Get Criativos\nrouter.get('/criativos/:id', auth, async (req,res) => {\n\n    try {\n\n        const criativos = await Criativo.find({ campaign: req.params.id})\n\n        if (!criativos) {\n            return res.status(404).send()\n        }\n\n        res.send(criativos)\n\n    } catch (e) {\n        console.log(e)\n        res.status(500).send(e)\n    }\n\n})\n\n// Get Criativo by ID\nrouter.get('/criativo/:id', auth, async (req,res) => {\n\n    try {\n\n        const criativo = await Criativo.findById({ _id: req.params.id})\n\n        if (!criativo) {\n            return res.status(404).send()\n        }\n\n        res.send(criativo)\n\n    } catch (e) {\n        console.log(e)\n        res.status(500).send(e)\n    }\n\n})\n\n// Read Image\nrouter.get('/criativo/imagem/:id', async (req,res) => {\n    \n    try {\n        const criativo = await Criativo.findById(req.params.id)\n        if (!criativo) {\n            throw new Error()\n        }\n        res.set('Content-Type', 'image/jpg')\n        \n        res.send(criativo.imagem)\n    } catch (e) {\n        res.status(400).send(e)\n    }\n\n})\n\n// Delete image\nrouter.delete('/criativos/:id', auth, async (req,res) => {\n    try {\n        const criativo = await Criativo.findOneAndDelete({ _id: req.params.id, owner: req.user._id })\n        if (!criativo) {\n            return res.status(404).send()\n        }\n        res.send(criativo)\n    } catch (e) {\n        res.status(500).send()\n    }\n\n})\n\n// Update Criativo\nrouter.patch('/criativos/:id',auth, upload.single('imagem'), async(req,res) => {\n\n    const updates = Object.keys(req.body).concat(req.file.fieldname)\n    const allowedUpdates = ['nome','imagem','descricao']\n    const isValidOperation = updates.every( update => allowedUpdates.includes(update) )\n\n    console.log(updates)\n\n    if (!isValidOperation) {\n        res.status(404).send('Error: Invalid update')\n    }\n\n    try {\n\n        const criativo = await Criativo.findOne({ _id: req.params.id })\n\n   \n        if (!criativo) {\n            return res.status(404).send()\n        }\n\n        updates.forEach(update => {\n            if (update === \"imagem\") {\n                return criativo[update] = req.file.buffer\n            }\n            return criativo[update] = req.body[update]\n\n        })\n        await criativo.save()\n        res.send(criativo)\n\n    } catch (e) {\n        res.status(400).send()\n    }\n\n})\n\n\n\nmodule.exports = router\n\n\n"]},"metadata":{},"sourceType":"module"}