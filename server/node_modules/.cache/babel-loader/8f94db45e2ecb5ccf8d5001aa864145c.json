{"ast":null,"code":"import _objectSpread from\"/Users/rodrigodaudskeff/Desktop/Mediabase/mediabase-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/rodrigodaudskeff/Desktop/Mediabase/mediabase-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectWithoutProperties from\"/Users/rodrigodaudskeff/Desktop/Mediabase/mediabase-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"value\",\"options\",\"prompt\",\"onChange\",\"label\",\"style\"],_excluded2=[\"value\",\"options\",\"prompt\",\"onChange\",\"style\"];import React,{useState,useRef,useContext,createContext}from'react';import{Styles,Wrapper,InlineOptions,InlineControl,Icon,Control,SelectedValue,Label,Option,Options}from'./styles';import{Info1}from'../Typography';import chevron from\"../../assets/icons/chevron-down.svg\";import{COLOR}from'../../tokens/colors';import{useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var Select=function Select(_ref){var value=_ref.value,options=_ref.options,prompt=_ref.prompt,onChange=_ref.onChange,label=_ref.label,style=_ref.style,rest=_objectWithoutProperties(_ref,_excluded);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isOpen=_useState2[0],setIsOpen=_useState2[1];var ref=useRef(null);useEffect(function(){document.addEventListener('click',close);return function(){return document.removeEventListener('click',close);};},[]);function close(e){setIsOpen(e&&e.target===ref.current);}return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Styles,{children:[label&&/*#__PURE__*/_jsx(Label,{children:label}),/*#__PURE__*/_jsxs(Wrapper,{children:[/*#__PURE__*/_jsxs(Control,_objectSpread(_objectSpread({ref:ref,onClick:function onClick(e){e.stopPropagation();setIsOpen(!isOpen);},style:style},rest),{},{children:[/*#__PURE__*/_jsx(SelectedValue,{isDefault:!value,children:value||prompt}),/*#__PURE__*/_jsx(Icon,{className:\"\".concat(isOpen?\"animate\":null),children:/*#__PURE__*/_jsx(\"img\",{src:chevron,alt:\"chevron-down\"})})]})),/*#__PURE__*/_jsxs(Options,{className:\"\".concat(isOpen?\"open\":null),children:[/*#__PURE__*/_jsx(Option,{value:\"\",onClick:function onClick(){onChange('');setIsOpen(false);},isDefault:true,children:prompt}),options.map(function(item,index){return/*#__PURE__*/_jsx(Option,{onClick:function onClick(){onChange(item);setIsOpen(false);},className:\"\".concat(value===item?'selected':null),children:item},index);})]})]})]})});};export var InlineSelect=function InlineSelect(_ref2){var value=_ref2.value,options=_ref2.options,prompt=_ref2.prompt,onChange=_ref2.onChange,style=_ref2.style,rest=_objectWithoutProperties(_ref2,_excluded2);var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isOpen=_useState4[0],setIsOpen=_useState4[1];var ref=useRef(null);useEffect(function(){document.addEventListener('click',close);return function(){return document.removeEventListener('click',close);};},[]);function close(e){setIsOpen(e&&e.target===ref.current);}return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Styles,{children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(InlineControl,_objectSpread(_objectSpread({ref:ref,onClick:function onClick(e){e.stopPropagation();setIsOpen(!isOpen);},style:style},rest),{},{children:[/*#__PURE__*/_jsx(SelectedValue,{isDefault:!value,children:value||prompt}),/*#__PURE__*/_jsx(Icon,{className:\"\".concat(isOpen?\"animate\":null),children:/*#__PURE__*/_jsx(\"img\",{src:chevron,alt:\"chevron-down\"})})]})),/*#__PURE__*/_jsx(InlineOptions,{className:\"\".concat(isOpen?\"open\":null),children:options.map(function(item,index){return/*#__PURE__*/_jsx(Option,{onClick:function onClick(){onChange(item);setIsOpen(false);},className:\"\".concat(value===item?'selected':null),children:item},index);})})]})})});};","map":{"version":3,"sources":["/Users/rodrigodaudskeff/Desktop/Mediabase/mediabase-app/client/src/components/Select/index.jsx"],"names":["React","useState","useRef","useContext","createContext","Styles","Wrapper","InlineOptions","InlineControl","Icon","Control","SelectedValue","Label","Option","Options","Info1","COLOR","useEffect","Select","value","options","prompt","onChange","label","style","rest","isOpen","setIsOpen","ref","document","addEventListener","close","removeEventListener","e","target","current","stopPropagation","chevron","map","item","index","InlineSelect"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useContext, createContext } from 'react';\nimport { Styles, Wrapper, InlineOptions, InlineControl, Icon, Control, SelectedValue, Label, Option, Options } from './styles'\nimport { Info1 } from '../Typography';\nimport chevron from '../../assets/icons/chevron-down.svg'\nimport { COLOR } from '../../tokens/colors';\nimport { useEffect } from 'react';\n\n\n\nexport const Select = ({ value, options, prompt, onChange, label, style, ...rest }) => {\n\n    const [ isOpen, setIsOpen ] = useState(false)\n    const ref = useRef(null)\n\n    useEffect(() => {\n        document.addEventListener('click', close)\n        return () => document.removeEventListener('click', close)\n    },[])\n\n    function close(e) {\n        setIsOpen( e && e.target === ref.current)\n    }\n \n    return (\n        <>\n        <Styles>\n            { label && <Label>{label}</Label>}\n            <Wrapper>\n                <Control ref={ref} onClick={(e) => {\n                    e.stopPropagation()\n                    setIsOpen(!isOpen)\n                }} style={style} {...rest}>\n                    <SelectedValue isDefault={!value}>\n                        { value || prompt }\n                    </SelectedValue>\n                    <Icon className={`${isOpen ? \"animate\" : null}`}>\n                        <img src={chevron} alt=\"chevron-down\" />\n                    </Icon>\n\n                </Control>\n                <Options className={`${isOpen ? \"open\" : null}`}>\n                <Option\n                    value=\"\"\n                    onClick={() => {\n                                onChange('')\n                                setIsOpen(false)\n                            }}\n                            isDefault={true}\n                    >{prompt}\n                    </Option>\n\n                    { options.map((item,index) => {\n                        return (\n                            <Option\n                            key={index}\n                            onClick={() => {\n                                onChange(item)\n                                setIsOpen(false)\n                            }}\n                            className={`${value === item ? 'selected' : null}`}\n                            >{item}</Option>\n                        )\n                    })}\n                </Options>\n             \n            </Wrapper>  \n\n            </Styles>\n\n           \n        </>\n\n    )\n}\n\n\n\nexport const InlineSelect = ({ value, options, prompt, onChange, style, ...rest }) => {\n\n    const [ isOpen, setIsOpen ] = useState(false)\n    const ref = useRef(null)\n\n    useEffect(() => {\n        document.addEventListener('click', close)\n        return () => document.removeEventListener('click', close)\n    },[])\n\n    function close(e) {\n        setIsOpen( e && e.target === ref.current)\n    }\n \n    return (\n        <>\n        <Styles>\n            <div>\n                <InlineControl ref={ref} onClick={(e) => {\n                    e.stopPropagation()\n                    setIsOpen(!isOpen)\n                }} style={style} {...rest}>\n                    <SelectedValue isDefault={!value}>\n                        { value || prompt }\n                    </SelectedValue>\n                    <Icon className={`${isOpen ? \"animate\" : null}`}>\n                        <img src={chevron} alt=\"chevron-down\" />\n                    </Icon>\n\n                </InlineControl>\n                <InlineOptions className={`${isOpen ? \"open\" : null}`}>\n             \n\n                    { options.map((item,index) => {\n                        return (\n                            <Option\n                            key={index}\n                            onClick={() => {\n                                onChange(item)\n                                setIsOpen(false)\n                            }}\n                            className={`${value === item ? 'selected' : null}`}\n                            >{item}</Option>\n                        )\n                    })}\n                </InlineOptions>\n             \n            </div>  \n\n            </Styles>\n\n           \n        </>\n\n    )\n}"]},"metadata":{},"sourceType":"module"}